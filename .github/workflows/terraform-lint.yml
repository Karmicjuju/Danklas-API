name: Terraform CI

on:
  pull_request:
    paths:
      - 'terraform/**'
      - '.tflint.hcl'
      - '.terraform-docs.yml'
      - 'app/**'
      - 'tests/**'
      - 'requirements*.txt'
      - 'Dockerfile'
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.tflint.hcl'
      - '.terraform-docs.yml'
      - 'app/**'
      - 'tests/**'
      - 'requirements*.txt'
      - 'Dockerfile'

env:
  PYTHON_VERSION: '3.11'

jobs:
  python-lint:
    name: Python Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Black format check
        run: black --check app/ tests/

      - name: isort import check
        run: isort --check-only app/ tests/

      - name: Run tests
        run: pytest --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  terraform-lint:
    name: Terraform Lint and Validate
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        environment: [dev, prod]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5.0

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.49.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive terraform/

      - name: Terraform Init
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform init -backend=false

      - name: Terraform Validate
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform validate

      - name: TFLint Init
        run: tflint --init

      - name: TFLint
        run: |
          tflint --config=.tflint.hcl terraform/
          cd terraform/environments/${{ matrix.environment }}
          tflint --config=../../.tflint.hcl .

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform/
          framework: terraform
          skip_check: CKV_AWS_79,CKV_AWS_115,CKV_AWS_116,CKV_AWS_117,CKV_AWS_173,CKV_AWS_260
          quiet: true
          soft_fail: true

      - name: Run Trivy Config Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: 'terraform/'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      - name: Run Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'  # Don't fail on Python vulnerabilities

  docker-lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: warning

  terraform-docs:
    name: Generate Terraform Docs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: terraform/
          output-file: README.md
          output-method: inject
          git-push: false
          git-commit-message: "terraform-docs: automated action"

      - name: Render terraform docs for dev environment
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: terraform/environments/dev/
          output-file: README.md
          output-method: inject
          git-push: false
          git-commit-message: "terraform-docs: automated action"

      - name: Render terraform docs for prod environment
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: terraform/environments/prod/
          output-file: README.md
          output-method: inject
          git-push: false
          git-commit-message: "terraform-docs: automated action"